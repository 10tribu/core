<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<?asciidoc-toc?>
<?asciidoc-numbered?>

<article lang="en">
<articleinfo>
    <title>API JSON RPC</title>
</articleinfo>
<simpara>Voici une documentation (qui évoluera) sur les méthodes de l&#8217;API. Tout d&#8217;abord voici les spécifications (JSON RPC 2.0) : <ulink url="http://www.jsonrpc.org/specification">http://www.jsonrpc.org/specification</ulink></simpara>
<simpara>L&#8217;accès à l&#8217;API se fait par l&#8217;url : URL_JEEDOM/core/api/jeeApi.php</simpara>
<section id="_divers">
<title>Divers</title>
<section id="_ping">
<title>ping</title>
<simpara>Retourne pong, permet de tester la communication avec Jeedom</simpara>
</section>
<section id="_version">
<title>version</title>
<simpara>Retourne la version de Jeedom</simpara>
</section>
<section id="_datetime">
<title>datetime</title>
<simpara>Retourne le datetime de Jeedom en microsecondes</simpara>
</section>
</section>
<section id="_api_json_event">
<title>API JSON Event</title>
<section id="_event_changes">
<title>event::changes</title>
<simpara>Retourne la liste des changements depuis le datetime passé en paramètre (doit être en microsecondes). Vous aurez aussi dans la réponse le datetime courant de Jeedom (à réutiliser pour l&#8217;interrogation suivante)</simpara>
<simpara>Paramètres :</simpara>
<itemizedlist>
<listitem>
<simpara>
int datetime
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_api_json_plugin">
<title>API JSON Plugin</title>
<section id="_plugin_listplugin">
<title>plugin::listPlugin</title>
<simpara>Retourne la liste de tous les plugins</simpara>
<simpara>Paramètres :</simpara>
<itemizedlist>
<listitem>
<simpara>
int activateOnly = 0 (ne retourne que la liste des plugins activés)
</simpara>
</listitem>
<listitem>
<simpara>
int orderByCaterogy = 0 (retourne la liste des plugins triés par catégorie)
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_api_json_objet">
<title>API JSON Objet</title>
<section id="_object_all">
<title>object::all</title>
<simpara>Retourne la liste de tous les objets</simpara>
</section>
<section id="_object_full">
<title>object::full</title>
<simpara>Retourne la liste de tous les objets, avec pour chaque objet tous ses équipements et pour chaque équipement toutes ses commandes ainsi que les états de celles-ci (pour les commandes de type info)</simpara>
</section>
<section id="_object_byid">
<title>object::byId</title>
<simpara>Retourne l&#8217;objet spécifié</simpara>
<simpara>Paramètres:</simpara>
<itemizedlist>
<listitem>
<simpara>
int id
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_object_fullbyid">
<title>object::fullById</title>
<simpara>Retourne un objet, ses équipements et pour chaque équipement toutes ses commandes ainsi que les états de cellse-ci (pour les commandes de type info)</simpara>
</section>
</section>
<section id="_api_json_summary">
<title>API JSON Summary</title>
<section id="_summary_global">
<title>summary::global</title>
<simpara>Retour le résumé global pour la clef passée en paramètre</simpara>
<simpara>Paramètres:</simpara>
<itemizedlist>
<listitem>
<simpara>
string key : (optionnel), clef du résumé voulu, si vide alors Jeedom vous renvoi le résumé pour toute les clefs
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_summary_byid">
<title>summary::byId</title>
<simpara>Retourne le résumé pour l&#8217;objet id</simpara>
<simpara>Paramètres:</simpara>
<itemizedlist>
<listitem>
<simpara>
int id : id de l&#8217;objet
</simpara>
</listitem>
<listitem>
<simpara>
string key : (optionnel), clef du résumé voulu, si vide alors Jeedom vous renvoi le résumé pour toute les clefs
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_api_json_eqlogic">
<title>API JSON EqLogic</title>
<section id="_eqlogic_all">
<title>eqLogic::all</title>
<simpara>Retourne la liste de tous les équipements</simpara>
</section>
<section id="_eqlogic_fullbyid">
<title>eqLogic::fullById</title>
<simpara>Retourne un équipement et ses commandes ainsi que les états de celles-ci (pour les commandes de type info)</simpara>
</section>
<section id="_eqlogic_byid">
<title>eqLogic::byId</title>
<simpara>Retourne l'équipement spécifié</simpara>
<simpara>Paramètres:</simpara>
<itemizedlist>
<listitem>
<simpara>
int id
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_eqlogic_bytype">
<title>eqLogic::byType</title>
<simpara>Retourne tous les équipements appartenant au type (plugin) spécifié</simpara>
<simpara>Paramètres:</simpara>
<itemizedlist>
<listitem>
<simpara>
string type
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_eqlogic_byobjectid">
<title>eqLogic::byObjectId</title>
<simpara>Retourne tous les équipements appartenant à l&#8217;objet spécifié</simpara>
<simpara>Paramètres:</simpara>
<itemizedlist>
<listitem>
<simpara>
int object_id
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_eqlogic_bytypeandid">
<title>eqLogic::byTypeAndId</title>
<simpara>Renvoi un tableau d'équipement en fonction des paramètres. Le retour sera de la forme array(<emphasis>eqType1</emphasis> &#8658;array( <emphasis>id</emphasis>&#8658;&#8230;,<emphasis>cmds</emphasis> &#8658; array(&#8230;.)),<emphasis>eqType2</emphasis> &#8658;array( <emphasis>id</emphasis>&#8658;&#8230;,<emphasis>cmds</emphasis> &#8658; array(&#8230;.))&#8230;.,id1 &#8658; array( <emphasis>id</emphasis>&#8658;&#8230;,<emphasis>cmds</emphasis> &#8658; array(&#8230;.)),id2 &#8658; array( <emphasis>id</emphasis>&#8658;&#8230;,<emphasis>cmds</emphasis> &#8658; array(&#8230;.))..)</simpara>
<simpara>Paramètres:</simpara>
<itemizedlist>
<listitem>
<simpara>
string[] eqType = tableau des types d'équipements voulus
</simpara>
</listitem>
<listitem>
<simpara>
int[] id = tableau des ID d'équipements personnalisés voulus
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_eqlogic_save">
<title>eqLogic::save</title>
<simpara>Retourne l'équipement enregistré/créé</simpara>
<simpara>Paramètres:</simpara>
<itemizedlist>
<listitem>
<simpara>
int id (vide si c&#8217;est une création)
</simpara>
</listitem>
<listitem>
<simpara>
string eqType_name (type de l'équipement script, virtuel&#8230;)
</simpara>
</listitem>
<listitem>
<simpara>
string $name
</simpara>
</listitem>
<listitem>
<simpara>
string $logicalId = &lt;nowiki&gt;''&lt;/nowiki&gt;
</simpara>
</listitem>
<listitem>
<simpara>
int $object_id = null
</simpara>
</listitem>
<listitem>
<simpara>
int $eqReal_id = null;
</simpara>
</listitem>
<listitem>
<simpara>
int $isVisible = 0;
</simpara>
</listitem>
<listitem>
<simpara>
int $isEnable = 0;
</simpara>
</listitem>
<listitem>
<simpara>
array $configuration;
</simpara>
</listitem>
<listitem>
<simpara>
int $timeout;
</simpara>
</listitem>
<listitem>
<simpara>
array $category;
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_api_json_cmd">
<title>API JSON Cmd</title>
<section id="_cmd_all">
<title>cmd::all</title>
<simpara>Retourne la liste de toutes les commandes</simpara>
</section>
<section id="_cmd_byid">
<title>cmd::byId</title>
<simpara>Retourne la commande spécifiée</simpara>
<simpara>Paramètres:</simpara>
<itemizedlist>
<listitem>
<simpara>
int id
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_cmd_byeqlogicid">
<title>cmd::byEqLogicId</title>
<simpara>Retourne toutes les commandes appartenant à l'équipement spécifié</simpara>
<simpara>Paramètres:</simpara>
<itemizedlist>
<listitem>
<simpara>
int eqLogic_id
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_cmd_execcmd">
<title>cmd::execCmd</title>
<simpara>Exécute la commande spécifiée</simpara>
<simpara>Paramètres:</simpara>
<itemizedlist>
<listitem>
<simpara>
int id
</simpara>
</listitem>
<listitem>
<simpara>
[options] Liste des options de la commande (dépend du type et du sous-type de la commande)
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_cmd_getstatistique">
<title>cmd::getStatistique</title>
<simpara>Retourne les statistiques sur la commande (ne marche que sur les commandes de type info et historisées)</simpara>
<simpara>Paramètres:</simpara>
<itemizedlist>
<listitem>
<simpara>
int id
</simpara>
</listitem>
<listitem>
<simpara>
string startTime : date de début de calcul des statistiques
</simpara>
</listitem>
<listitem>
<simpara>
string endTime : date de fin de calcul des statistiques
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_cmd_gettendance">
<title>cmd::getTendance</title>
<simpara>Retourne la tendance sur la commande (ne marche que sur les commandes de type info et historisées)</simpara>
<simpara>Paramètres:</simpara>
<itemizedlist>
<listitem>
<simpara>
int id
</simpara>
</listitem>
<listitem>
<simpara>
string startTime : date de début de calcul de la tendance
</simpara>
</listitem>
<listitem>
<simpara>
string endTime : date de fin de calcul de la tendance
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_cmd_gethistory">
<title>cmd::getHistory</title>
<simpara>Retourne l&#8217;historique de la commande (ne marche que sur les commandes de type info et historisées)</simpara>
<simpara>Paramètres:</simpara>
<itemizedlist>
<listitem>
<simpara>
int id
</simpara>
</listitem>
<listitem>
<simpara>
string startTime : date de début de l&#8217;historique
</simpara>
</listitem>
<listitem>
<simpara>
string endTime : date de fin de l&#8217;historique
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_api_json_scenario">
<title>API JSON Scenario</title>
<section id="_scenario_all">
<title>scenario::all</title>
<simpara>Retourne la liste de tous les scénarios</simpara>
</section>
<section id="_scenario_byid">
<title>scenario::byId</title>
<simpara>Retourne le scénario spécifié</simpara>
<simpara>Paramètres:</simpara>
<itemizedlist>
<listitem>
<simpara>
int id
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_scenario_changestate">
<title>scenario::changeState</title>
<simpara>Change l'état du scénario spécifié.</simpara>
<simpara>Paramètres:</simpara>
<itemizedlist>
<listitem>
<simpara>
int id
</simpara>
</listitem>
<listitem>
<simpara>
string state : [run,stop,enable,disable]
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_api_json_datastore_variable">
<title>API JSON datastore (variable)</title>
<section id="_datastore_bytypelinkidkey">
<title>datastore::byTypeLinkIdKey</title>
<simpara>Récupère la valeur d&#8217;une variable stockée dans le datastore</simpara>
<simpara>Paramètres:</simpara>
<itemizedlist>
<listitem>
<simpara>
string type : type de la valeur stockée (pour les scénarios c&#8217;est scenario)
</simpara>
</listitem>
<listitem>
<simpara>
id linkId : -1 pour le global (valeur pour les scénarios par défaut, ou l&#8217;id du scénario)
</simpara>
</listitem>
<listitem>
<simpara>
string key : nom de la valeur
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_datastore_save">
<title>datastore::save</title>
<simpara>Enregistre la valeur d&#8217;une variable dans le datastore</simpara>
<simpara>Paramètres:</simpara>
<itemizedlist>
<listitem>
<simpara>
string type : type de la valeur stockée (pour les scénarios c&#8217;est scenario)
</simpara>
</listitem>
<listitem>
<simpara>
id linkId : -1 pour le global (valeur pour les scénarios par défaut, ou l&#8217;id du scénario)
</simpara>
</listitem>
<listitem>
<simpara>
string key : nom de la valeur
</simpara>
</listitem>
<listitem>
<simpara>
mixte value : valeur à enregistrer
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_api_json_message">
<title>API JSON Message</title>
<section id="_message_all">
<title>message::all</title>
<simpara>Retourne la liste de tous les messages</simpara>
</section>
<section id="_message_removeall">
<title>message::removeAll</title>
<simpara>Supprime tous les messages</simpara>
</section>
</section>
<section id="_api_json_interaction">
<title>API JSON Interaction</title>
<section id="_interact_trytoreply">
<title>interact::tryToReply</title>
<simpara>Essaie de faire correspondre une demande avec une interaction, exécute l&#8217;action et répond en conséquence</simpara>
<simpara>Paramètres:</simpara>
<itemizedlist>
<listitem>
<simpara>
query (phrase de la demande)
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_api_json_system">
<title>API JSON System</title>
<section id="_jeedom_halt">
<title>jeedom::halt</title>
<simpara>Permet d&#8217;arrêter Jeedom</simpara>
</section>
<section id="_jeedom_reboot">
<title>jeedom::reboot</title>
<simpara>Permet de redémarrer Jeedom</simpara>
</section>
</section>
<section id="_api_json_plugin_2">
<title>API JSON plugin</title>
<section id="_plugin_install">
<title>plugin::install</title>
<simpara>Installation/Mise à jour d&#8217;un plugin donné</simpara>
<simpara>Paramètres:</simpara>
<itemizedlist>
<listitem>
<simpara>
string plugin_id : nom du plugin (nom logique)
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_plugin_remove">
<title>plugin::remove</title>
<simpara>Suppression d&#8217;un plugin donné</simpara>
<simpara>Paramètres:</simpara>
<itemizedlist>
<listitem>
<simpara>
string plugin_id : nom du plugin (nom logique)
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_api_json_update">
<title>API JSON update</title>
<section id="_update_all">
<title>update::all</title>
<simpara>Retour la liste de tous les composants installés, leur version et les informations associées</simpara>
</section>
<section id="_update_checkupdate">
<title>update::checkUpdate</title>
<simpara>Permet de vérifier les mises à jour</simpara>
</section>
<section id="_update_update">
<title>update::update</title>
<simpara>Permet de mettre à jour Jeedom et tous les plugins</simpara>
</section>
</section>
<section id="_api_json_exemples">
<title>API JSON Exemples</title>
<simpara>Voici un exemple d&#8217;utilisation de l&#8217;API. Pour l&#8217;exemple ci-dessous j&#8217;utilise <ulink url="https://github.com/jeedom/core/blob/stable/core/class/jsonrpcClient.class.php">cette class php</ulink> qui permet de simplifier l&#8217;utilisation de l&#8217;api.</simpara>
<simpara>Récupération de la liste des objets :</simpara>
<programlisting language="php" linenumbering="unnumbered">$jsonrpc = new jsonrpcClient('#URL_JEEDOM#/core/api/jeeApi.php', #API_KEY#);
if($jsonrpc-&gt;sendRequest('object::all', array())){
    print_r($jsonrpc-&gt;getResult());
}else{
    echo $jsonrpc-&gt;getError();
}</programlisting>
<simpara>Exécution d&#8217;une commande (avec comme option un titre et un message)</simpara>
<programlisting language="php" linenumbering="unnumbered">$jsonrpc = new jsonrpcClient('#URL_JEEDOM#/core/api/jeeApi.php', #API_KEY#);
if($jsonrpc-&gt;sendRequest('cmd::execCmd', array('id' =&gt; #cmd_id#, 'options' =&gt; array('title' =&gt; 'Coucou', 'message' =&gt; 'Ca marche')))){
    echo 'OK';
}else{
    echo $jsonrpc-&gt;getError();
}</programlisting>
<simpara>L&#8217;API est bien sur utilisable avec d&#8217;autres langages (simplement un post sur une page) </simpara>
</section>
</article>
