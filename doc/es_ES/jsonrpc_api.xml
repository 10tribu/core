<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<?asciidoc-toc?>
<?asciidoc-numbered?>

<article lang="en">
<articleinfo>
    <title>API JSON RPC</title>
</articleinfo>
<simpara>Aquí esta la documentación sobre los métodos de la API. En primer lugar están las especificaciones (JSON RPC 2.0):</simpara>
<simpara>A la API se accede a través de la url: URL_JEEDOM/core/api/jeeApi.php</simpara>
<section id="_misceláneos">
<title>Misceláneos</title>
<section id="_ping">
<title>ping</title>
<simpara>Devuelve pong , permite probar la comunicación con Jeedom</simpara>
</section>
<section id="_versión">
<title>versión</title>
<simpara>Devuelve la versión de Jeedom</simpara>
</section>
<section id="_datetime">
<title>datetime</title>
<simpara>Retourne le datetime de Jeedom en microsecondes</simpara>
</section>
</section>
<section id="_api_json_event">
<title>API JSON Event</title>
<section id="_event_changes">
<title>event::changes</title>
<simpara>Retourne la liste des changements depuis le datetime passé en paramètre (doit être en microsecondes). Vous aurez aussi dans la réponse le datetime courant de Jeedom (à réutiliser pour l&#8217;interrogation suivante)</simpara>
<simpara>Parámetros:</simpara>
<itemizedlist>
<listitem>
<simpara>
int datetime
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_api_json_plugin">
<title>API JSON Plugin</title>
<section id="_plugin_listplugin">
<title>plugin::listPlugin</title>
<simpara>Devuelve una lista de todos los plugins</simpara>
<simpara>Parámetros:</simpara>
<simpara>-int activateOnly = 0 (devuelve sólo la lista de plugins activos)
-int orderByCaterogy = 0 (devuelve la lista de plugins ordenados por categoría)</simpara>
</section>
</section>
<section id="_api_json_objet">
<title>API JSON Objet</title>
<section id="_object_all">
<title>object::all</title>
<simpara>Devuelve una lista de todos los objetos</simpara>
</section>
<section id="_object_full">
<title>object::full</title>
<simpara>Retourne la liste de tous les objets, avec pour chaque objet tous ses équipements et pour chaque équipement toutes ses commandes ainsi que les états de celles-ci (pour les commandes de type info)</simpara>
</section>
<section id="_object_byid">
<title>object::byId</title>
<simpara>Devuelve el objeto especificado</simpara>
<simpara>Parámetros:</simpara>
<itemizedlist>
<listitem>
<simpara>
int id
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_object_fullbyid">
<title>object::fullById</title>
<simpara>Retourne un objet, ses équipements et pour chaque équipement toutes ses commandes ainsi que les états de cellse-ci (pour les commandes de type info)</simpara>
</section>
</section>
<section id="_api_json_summary">
<title>API JSON Summary</title>
<section id="_summary_global">
<title>summary::global</title>
<simpara>Retour le résumé global pour la clef passée en paramètre</simpara>
<simpara>Parámetros:</simpara>
<itemizedlist>
<listitem>
<simpara>
string key : (optionnel), clef du résumé voulu, si vide alors Jeedom vous renvoi le résumé pour toute les clefs
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_summary_byid">
<title>summary::byId</title>
<simpara>Retourne le résumé pour l&#8217;objet id</simpara>
<simpara>Parámetros:</simpara>
<itemizedlist>
<listitem>
<simpara>
int id : id de l&#8217;objet
</simpara>
</listitem>
<listitem>
<simpara>
string key : (optionnel), clef du résumé voulu, si vide alors Jeedom vous renvoi le résumé pour toute les clefs
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_api_json_eqlogic">
<title>API JSON EqLogic</title>
<section id="_eqlogic_all">
<title>eqLogic::all</title>
<simpara>Devuelve una lista de todos los dispositivos</simpara>
</section>
<section id="_eqlogic_fullbyid">
<title>eqLogic::fullById</title>
<simpara>Retourne un équipement et ses commandes ainsi que les états de celles-ci (pour les commandes de type info)</simpara>
</section>
<section id="_eqlogic_byid">
<title>eqLogic::byId</title>
<simpara>Devuelve el dispositivo especificado</simpara>
<simpara>Parámetros:</simpara>
<itemizedlist>
<listitem>
<simpara>
int id
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_eqlogic_bytype">
<title>eqLogic::byType</title>
<simpara>Devuelve todas las instalaciones pertenecientes al tipo especificado (plugin)</simpara>
<simpara>Parámetros:</simpara>
<itemizedlist>
<listitem>
<simpara>
string type
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_eqlogic_byobjectid">
<title>eqLogic::byObjectId</title>
<simpara>Devuelve todas las instalaciones pertenecientes a la especificada</simpara>
<simpara>Parámetros:</simpara>
<itemizedlist>
<listitem>
<simpara>
int object_id
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_eqlogic_bytypeandid">
<title>eqLogic::byTypeAndId</title>
<simpara>Devuelve un array de equipos dependiendo de la configuración. El resultado será de la forma array(<emphasis>eqType1</emphasis> &#8658;array( <emphasis>id</emphasis>&#8658;&#8230;,<emphasis>cmds</emphasis> &#8658; array(&#8230;.)),<emphasis>eqType2</emphasis> &#8658;array( <emphasis>id</emphasis>&#8658;&#8230;,<emphasis>cmds</emphasis> &#8658; array(&#8230;.))&#8230;.,id1 &#8658; array( <emphasis>id</emphasis>&#8658;&#8230;,<emphasis>cmds</emphasis> &#8658; array(&#8230;.)),id2 &#8658; array( <emphasis>id</emphasis>&#8658;&#8230;,<emphasis>cmds</emphasis> &#8658; array(&#8230;.))..)</simpara>
<simpara>Parámetros:</simpara>
<simpara>-string eqType [] = array de los tipos de dispositivos necesarios
-int [] id = matriz ID de dispositivos deseados personalizados</simpara>
</section>
<section id="_eqlogic_save">
<title>eqLogic::save</title>
<simpara>Devuelve el dispositivo guardado/creado</simpara>
<simpara>Parámetros:</simpara>
<simpara>-int id (vacío si es una creación)
-string eqType_name (tipo guión de dispositivo,  virtual&#8230;)
- string $name
- string $logicalId = &lt;nowiki&gt;''&lt;/nowiki&gt;
- int $object_id = null
- int $eqReal_id = null;
- int $isVisible = 0;
- int $isEnable = 0;
- array $configuration;
- int $timeout;
- array $category;</simpara>
</section>
</section>
<section id="_api_json_cmd">
<title>API JSON Cmd</title>
<section id="_cmd_all">
<title>cmd::all</title>
<simpara>Devuelve la lista de todos los comandos</simpara>
</section>
<section id="_cmd_byid">
<title>cmd::byId</title>
<simpara>Devuelve el comando especificado</simpara>
<simpara>Parámetros:</simpara>
<itemizedlist>
<listitem>
<simpara>
int id
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_cmd_byeqlogicid">
<title>cmd::byEqLogicId</title>
<simpara>Devuelve todos los comandos que pertenecen al dispositivo especificado</simpara>
<simpara>Parámetros:</simpara>
<itemizedlist>
<listitem>
<simpara>
int eqLogic_id
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_cmd_execcmd">
<title>cmd::execCmd</title>
<simpara>Ejecuta el comando especificado</simpara>
<simpara>Parámetros:</simpara>
<itemizedlist>
<listitem>
<simpara>
int id
-[options] lista de opciones  del comando (dependiendo el tipo y el subtipo del comando)
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_cmd_getstatistique">
<title>cmd::getStatistique</title>
<simpara>Retourne les statistiques sur la commande (ne marche que sur les commandes de type info et historisées)</simpara>
<simpara>Parámetros:</simpara>
<itemizedlist>
<listitem>
<simpara>
int id
-string startTime: fecha de inicio para el cálculo de las estadística
</simpara>
</listitem>
<listitem>
<simpara>
string endTime : fecha de fin del calculo de las estadisticas
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_cmd_gettendance">
<title>cmd::getTendance</title>
<simpara>Devuelve la tendencia sobre el comando (no funciona con los comandos  tipo información e historicos)</simpara>
<simpara>Parámetros:</simpara>
<itemizedlist>
<listitem>
<simpara>
int id
</simpara>
</listitem>
<listitem>
<simpara>
string startTime : fecha de inicio de cálculo de la tendencia
</simpara>
</listitem>
<listitem>
<simpara>
string endTime : fecha final del cálculo de la tendencia
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_cmd_gethistory">
<title>cmd::getHistory</title>
<simpara>Devuelve el historico del comando (no funciona con comandos tipo información e historicos)</simpara>
<simpara>Parámetros:</simpara>
<itemizedlist>
<listitem>
<simpara>
int id
</simpara>
</listitem>
<listitem>
<simpara>
string startTime : fecha de inicio del historico
</simpara>
</listitem>
<listitem>
<simpara>
string endTime : date de fin del historico
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_api_json_scenario">
<title>API JSON Scenario</title>
<section id="_scenario_all">
<title>scenario::all</title>
<simpara>Devuelve una lista de todos los escenarios</simpara>
</section>
<section id="_scenario_byid">
<title>scenario::byId</title>
<simpara>Devuelve el escenario especificado</simpara>
<simpara>Parámetros:</simpara>
<itemizedlist>
<listitem>
<simpara>
int id
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_scenario_changestate">
<title>scenario::changeState</title>
<simpara>Cambia el estado del escenario especificado.</simpara>
<simpara>Parámetros:</simpara>
<itemizedlist>
<listitem>
<simpara>
int id
</simpara>
</listitem>
<listitem>
<simpara>
string state : [run,stop,enable,disable]
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_api_json_datastore_variable">
<title>API JSON datastore (variable)</title>
<section id="_datastore_bytypelinkidkey">
<title>datastore::byTypeLinkIdKey</title>
<simpara>Recupera el valor de una variable que se almacena en el almacén de datos</simpara>
<simpara>Parámetros:</simpara>
<itemizedlist>
<listitem>
<simpara>
string type : tipo de valor almacenado (para los escenarios es scenario)
</simpara>
</listitem>
<listitem>
<simpara>
id linkId : -1 pour le global (valeur pour les scénarios par défaut, ou l&#8217;id du scénario)
</simpara>
</listitem>
<listitem>
<simpara>
string key : nombre de valor
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_datastore_save">
<title>datastore::save</title>
<simpara>Guarda el valor de una variable en el almacén de datos</simpara>
<simpara>Parámetros:</simpara>
<itemizedlist>
<listitem>
<simpara>
string type : tipo de valor almacenado (para los escenarios es scenario)
</simpara>
</listitem>
<listitem>
<simpara>
id linkId : -1 pour le global (valeur pour les scénarios par défaut, ou l&#8217;id du scénario)
</simpara>
</listitem>
<listitem>
<simpara>
string key : nombre de valor
</simpara>
</listitem>
<listitem>
<simpara>
mixte value : valor a guardar
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_api_json_message">
<title>API JSON Message</title>
<section id="_message_all">
<title>message::all</title>
<simpara>Devuelve una lista de todos los mensajes</simpara>
</section>
<section id="_message_removeall">
<title>message::removeAll</title>
<simpara>Elimina todos los mensajes</simpara>
</section>
</section>
<section id="_api_json_interaction">
<title>API JSON Interaction</title>
<section id="_interact_trytoreply">
<title>interact::tryToReply</title>
<simpara>Essaie de faire correspondre une demande avec une interaction, exécute l&#8217;action et répond en conséquence</simpara>
<simpara>Parámetros:</simpara>
<itemizedlist>
<listitem>
<simpara>
query  (frase de petición)
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_api_json_system">
<title>API JSON System</title>
<section id="_jeedom_halt">
<title>jeedom::halt</title>
<simpara>Permite detener Jeedom</simpara>
</section>
<section id="_jeedom_reboot">
<title>jeedom::reboot</title>
<simpara>Permite reiniciar Jeedom</simpara>
</section>
</section>
<section id="_api_json_plugin_2">
<title>API JSON plugin</title>
<section id="_plugin_install">
<title>plugin::install</title>
<simpara>Instalación/actualización de un plugin determinado</simpara>
<simpara>Parámetros:</simpara>
<itemizedlist>
<listitem>
<simpara>
string plugin_id : nombre del plugin (nombre lógico)
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_plugin_remove">
<title>plugin::remove</title>
<simpara>Eliminación de un plugin determinado</simpara>
<simpara>Parámetros:</simpara>
<itemizedlist>
<listitem>
<simpara>
string plugin_id : nombre del plugin (nombre lógico)
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_api_json_update">
<title>API JSON update</title>
<section id="_update_all">
<title>update::all</title>
<simpara>Devuelve una lista de todos los componentes instalados, sus versiones e información asociada</simpara>
</section>
<section id="_update_checkupdate">
<title>update::checkUpdate</title>
<simpara>Permet de vérifier les mises à jour</simpara>
</section>
<section id="_update_update">
<title>update::update</title>
<simpara>Permite actualizar Jeedom y todos los plugins</simpara>
</section>
</section>
<section id="_api_json_ejemplos">
<title>API JSON Ejemplos</title>
<simpara>Voici un exemple d&#8217;utilisation de l&#8217;API. Pour l&#8217;exemple ci-dessous j&#8217;utilise <ulink url="https://github.com/jeedom/core/blob/stable/core/class/jsonrpcClient.class.php">cette class php</ulink> qui permet de simplifier l&#8217;utilisation de l&#8217;api.</simpara>
<simpara>Recuperar la lista de objetos:</simpara>
<programlisting language="php" linenumbering="unnumbered">$jsonrpc = new jsonrpcClient('#URL_JEEDOM#/core/api/jeeApi.php', #API_KEY#);
if($jsonrpc-&gt;sendRequest('object::all', array())){
    print_r($jsonrpc-&gt;getResult());
}else{
    echo $jsonrpc-&gt;getError();
}</programlisting>
<simpara>Ejecutar un comando (con una opción de un título y mensaje)</simpara>
<programlisting language="php" linenumbering="unnumbered">$jsonrpc = new jsonrpcClient('#URL_JEEDOM#/core/api/jeeApi.php', #API_KEY#);
if($jsonrpc-&gt;sendRequest('cmd::execCmd', array('id' =&gt; #cmd_id#, 'options' =&gt; array('title' =&gt; 'Coucou', 'message' =&gt; 'Ca marche')))){
    echo 'OK';
}else{
    echo $jsonrpc-&gt;getError();
}</programlisting>
<simpara>L&#8217;API est bien sur utilisable avec d&#8217;autres langages (simplement un post sur une page) </simpara>
</section>
</article>
