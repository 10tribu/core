<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<?asciidoc-toc?>
<?asciidoc-numbered?>

<article lang="en">
<articleinfo>
    <title>JSON RPC API</title>
</articleinfo>
<simpara>Das ist eine Dokumentation (die sich entwickeln wird) für die Arbeitsweise der APIs. Zuallererst hier sind die Spezifizierungen  (JSON RPC 2.0) : <ulink url="http://www.jsonrpc.org/specification">http://www.jsonrpc.org/specification</ulink></simpara>
<simpara>Der Zugriff auf das API ist über die URL : URL_JEEDOM/core/api/jeeApi.php möglich</simpara>
<section id="_divers">
<title>Divers</title>
<section id="_ping">
<title>ping</title>
<simpara>Retourne pong, permet de tester la communication avec Jeedom</simpara>
</section>
<section id="_version">
<title>Version</title>
<simpara>Gibt die Jeedom Version zurück</simpara>
</section>
<section id="_datetime">
<title>datetime</title>
<simpara>Retourne le datetime de Jeedom en microsecondes</simpara>
</section>
</section>
<section id="_json_api_event">
<title>JSON API Event</title>
<section id="_event_changes">
<title>event::changes</title>
<simpara>Retourne la liste des changements depuis le datetime passé en paramètre (doit être en microsecondes). Vous aurez aussi dans la réponse le datetime courant de Jeedom (à réutiliser pour l&#8217;interrogation suivante)</simpara>
<simpara>Parameter :</simpara>
<itemizedlist>
<listitem>
<simpara>
int datetime
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_json_api_plugin">
<title>JSON API Plugin</title>
<section id="_plugin_listplugin">
<title>plugin::listPlugin</title>
<simpara>Gibt die Liste aller Plugins zurück</simpara>
<simpara>Parameter :</simpara>
<itemizedlist>
<listitem>
<simpara>
int activateOnly = 0 (liefert nur die Liste der aktivierten Plugins)
</simpara>
</listitem>
<listitem>
<simpara>
int orderByCaterogy = 0 (liefert die Liste der Plugins nach Kategorie geordnet)
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_json_api_objet">
<title>JSON API Objet</title>
<section id="_object_all">
<title>object::all</title>
<simpara>Gibt die Liste aller Objekte zurück</simpara>
</section>
<section id="_object_full">
<title>object::full</title>
<simpara>Liefert eine Liste aller Objekte, mit allen Geräten für jedes Objekt und alle Befehle von jedem Gerät, sowie die Zustände von diesem (für Befehle des Info Typs)</simpara>
</section>
<section id="_object_byid">
<title>object::byId</title>
<simpara>Liefert das angegebene Objekt zurück</simpara>
<simpara>Parameter :</simpara>
<itemizedlist>
<listitem>
<simpara>
int id
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_object_fullbyid">
<title>object::fullById</title>
<simpara>Gibt ein Objekt zurück, seine Geräte und für jedes Gerät alle seine Befehle und die Zustände</simpara>
</section>
</section>
<section id="_api_json_summary">
<title>API JSON Summary</title>
<section id="_summary_global">
<title>summary::global</title>
<simpara>Retour le résumé global pour la clef passée en paramètre</simpara>
<simpara>Parameter :</simpara>
<itemizedlist>
<listitem>
<simpara>
string key : (optionnel), clef du résumé voulu, si vide alors Jeedom vous renvoi le résumé pour toute les clefs
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_summary_byid">
<title>summary::byId</title>
<simpara>Retourne le résumé pour l&#8217;objet id</simpara>
<simpara>Parameter :</simpara>
<itemizedlist>
<listitem>
<simpara>
int id : id de l&#8217;objet
</simpara>
</listitem>
<listitem>
<simpara>
string key : (optionnel), clef du résumé voulu, si vide alors Jeedom vous renvoi le résumé pour toute les clefs
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_json_api_eqlogic">
<title>JSON API EqLogic</title>
<section id="_eqlogic_all">
<title>eqLogic::all</title>
<simpara>Gibt die Liste aller Geräte zurück</simpara>
</section>
<section id="_eqlogic_fullbyid">
<title>eqLogic::fullById</title>
<simpara>Gibt ein Gerät sowie dessen Befehle und die Zustände zurück (für Befehle des Info Typs)</simpara>
</section>
<section id="_eqlogic_byid">
<title>eqLogic::byId</title>
<simpara>Liefert das angegebene Gerät zurück</simpara>
<simpara>Parameter :</simpara>
<itemizedlist>
<listitem>
<simpara>
int id
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_eqlogic_bytype">
<title>eqLogic::byType</title>
<simpara>Gibt alle zum genau angegebenen Typ (plugin) gehörenden Geräte zurück</simpara>
<simpara>Parameter :</simpara>
<itemizedlist>
<listitem>
<simpara>
string type
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_eqlogic_byobjectid">
<title>eqLogic::byObjectId</title>
<simpara>Gibt alle zum genau angegebenen Gerät gehörenden Objekte zurück</simpara>
<simpara>Parameter :</simpara>
<itemizedlist>
<listitem>
<simpara>
int object_id
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_eqlogic_bytypeandid">
<title>eqLogic::byTypeAndId</title>
<simpara>Weiterleiten einer Anordnung von Gerät gemäß den Parametern. Die Rücksendung wird folgende Form haben array(<emphasis>eqType1</emphasis> &#8658;array( <emphasis>id</emphasis>&#8658;&#8230;,<emphasis>cmds</emphasis> &#8658; array(&#8230;.)),<emphasis>eqType2</emphasis> &#8658;array( <emphasis>id</emphasis>&#8658;&#8230;,<emphasis>cmds</emphasis> &#8658; array(&#8230;.))&#8230;.,id1 &#8658; array( <emphasis>id</emphasis>&#8658;&#8230;,<emphasis>cmds</emphasis> &#8658; array(&#8230;.)),id2 &#8658; array( <emphasis>id</emphasis>&#8658;&#8230;,<emphasis>cmds</emphasis> &#8658; array(&#8230;.))..)</simpara>
<simpara>Parameter :</simpara>
<itemizedlist>
<listitem>
<simpara>
string[] eqType = Tabelle der gewünschten Gerätetypen
</simpara>
</listitem>
<listitem>
<simpara>
int[] id = individuelle erwünschte Geräte-ID Tabelle
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_eqlogic_save">
<title>eqLogic::save</title>
<simpara>Retourne l'équipement enregistré/créé</simpara>
<simpara>Parameter :</simpara>
<itemizedlist>
<listitem>
<simpara>
int id (vide si c&#8217;est une création)
</simpara>
</listitem>
<listitem>
<simpara>
string eqType_name (type de l'équipement script, virtuel&#8230;)
</simpara>
</listitem>
<listitem>
<simpara>
string $name
</simpara>
</listitem>
<listitem>
<simpara>
string $logicalId = &lt;nowiki&gt;''&lt;/nowiki&gt;
</simpara>
</listitem>
<listitem>
<simpara>
int $object_id = null
</simpara>
</listitem>
<listitem>
<simpara>
int $eqReal_id = null;
</simpara>
</listitem>
<listitem>
<simpara>
int $isVisible = 0;
</simpara>
</listitem>
<listitem>
<simpara>
int $isEnable = 0;
</simpara>
</listitem>
<listitem>
<simpara>
array $configuration;
</simpara>
</listitem>
<listitem>
<simpara>
int $timeout;
</simpara>
</listitem>
<listitem>
<simpara>
array $category;
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_json_api_cmd">
<title>JSON API Cmd</title>
<section id="_cmd_all">
<title>cmd::all</title>
<simpara>Gibt die Liste aller Befehle zurück</simpara>
</section>
<section id="_cmd_byid">
<title>cmd::byId</title>
<simpara>Liefert den angegebenen Befehl zurück</simpara>
<simpara>Parameter :</simpara>
<itemizedlist>
<listitem>
<simpara>
int id
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_cmd_byeqlogicid">
<title>cmd::byEqLogicId</title>
<simpara>Gibt alle zum angegebenen Gerät gehörenden Befehle zurück</simpara>
<simpara>Parameter :</simpara>
<itemizedlist>
<listitem>
<simpara>
int eqLogic_id
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_cmd_execcmd">
<title>cmd::execCmd</title>
<simpara>Führt den angegebenen Befehl aus</simpara>
<simpara>Parameter :</simpara>
<itemizedlist>
<listitem>
<simpara>
int id
</simpara>
</listitem>
<listitem>
<simpara>
[options] Liste der Optionen für die Befehle (hängt vom Typ und von der Unterklasse des Befehles ab)
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_cmd_getstatistique">
<title>cmd::getStatistique</title>
<simpara>Gibt Statistiken über den Befehl zurück (funktioniert nur Befehle vom Info Typ und historisiert)</simpara>
<simpara>Parameter :</simpara>
<itemizedlist>
<listitem>
<simpara>
int id
</simpara>
</listitem>
<listitem>
<simpara>
string startTime : Der Anfangszeitpunkt für die Berechnung der Statistik
</simpara>
</listitem>
<listitem>
<simpara>
string endTime : Der Endzeitpunkt für die Berechnung der Statistik
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_cmd_gettendance">
<title>cmd::getTendance</title>
<simpara>Gibt die Tendenz über den Befehl zurück (funktioniert nur mit Befehle vom Typ Info und Chronik)</simpara>
<simpara>Parameter :</simpara>
<itemizedlist>
<listitem>
<simpara>
int id
</simpara>
</listitem>
<listitem>
<simpara>
string startTime : Der Anfangszeitpunkt für die Berechnung der Tendenz
</simpara>
</listitem>
<listitem>
<simpara>
string endTime : Der Endzeitpunkt für die Berechnung der Tendenz
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_cmd_gethistory">
<title>cmd::getHistory</title>
<simpara>Gibt die Chronik des Befehles zurück (funktioniert nur mit Befehle vom  Typ Info und Chronik)</simpara>
<simpara>Parameter :</simpara>
<itemizedlist>
<listitem>
<simpara>
int id
</simpara>
</listitem>
<listitem>
<simpara>
string startTime : Der Anfangszeitpunkt für die Berechnung der Chronik
</simpara>
</listitem>
<listitem>
<simpara>
string endTime : Der Endzeitpunkt der Chronik
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_json_api_szenario">
<title>JSON API Szenario</title>
<section id="_scenario_all">
<title>scenario::all</title>
<simpara>Gibt eine Liste aller Szenarien zurück</simpara>
</section>
<section id="_scenario_byid">
<title>scenario::byId</title>
<simpara>Gibt das genau angegebene Szenario zurück</simpara>
<simpara>Parameter :</simpara>
<itemizedlist>
<listitem>
<simpara>
int id
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_scenario_changestate">
<title>scenario::changeState</title>
<simpara>Ändert den Zustand des angegebenen Szenarios.</simpara>
<simpara>Parameter :</simpara>
<itemizedlist>
<listitem>
<simpara>
int id
</simpara>
</listitem>
<listitem>
<simpara>
string state : [run,stop,enable,disable]
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_json_api_datastore_variable">
<title>JSON API datastore (variable)</title>
<section id="_datastore_bytypelinkidkey">
<title>datastore::byTypeLinkIdKey</title>
<simpara>Ruft den Wert einer Variablen ab, der im Datenspeicher gespeichert ist</simpara>
<simpara>Parameter :</simpara>
<itemizedlist>
<listitem>
<simpara>
string type : Typ des gespeicherten Wertes (für die Szenarien ist es Szenario)
</simpara>
</listitem>
<listitem>
<simpara>
id linkId : -1 pour le global (valeur pour les scénarios par défaut, ou l&#8217;id du scénario)
</simpara>
</listitem>
<listitem>
<simpara>
string key : Name des Wertes
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_datastore_save">
<title>datastore::save</title>
<simpara>Speichert den Wert einer Variablen in den Datenspeicher</simpara>
<simpara>Parameter :</simpara>
<itemizedlist>
<listitem>
<simpara>
string type : Typ des gespeicherten Wertes (für die Szenarien ist es Szenario)
</simpara>
</listitem>
<listitem>
<simpara>
id linkId : -1 pour le global (valeur pour les scénarios par défaut, ou l&#8217;id du scénario)
</simpara>
</listitem>
<listitem>
<simpara>
string key : Name des Wertes
</simpara>
</listitem>
<listitem>
<simpara>
mixte value : zu registrierender Wert
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_json_api_nachrichten">
<title>JSON API Nachrichten</title>
<section id="_message_all">
<title>message::all</title>
<simpara>Gibt eine Liste aller Nachrichten zurück</simpara>
</section>
<section id="_message_removeall">
<title>message::removeAll</title>
<simpara>Alle Nachrichten löschen</simpara>
</section>
</section>
<section id="_json_api_interaktion">
<title>JSON API Interaktion</title>
<section id="_interact_trytoreply">
<title>interact::tryToReply</title>
<simpara>Essaie de faire correspondre une demande avec une interaction, exécute l&#8217;action et répond en conséquence</simpara>
<simpara>Parameter :</simpara>
<itemizedlist>
<listitem>
<simpara>
query (phrase de la demande)
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_json_api_system">
<title>JSON API System</title>
<section id="_jeedom_halt">
<title>jeedom::halt</title>
<simpara>Ermöglicht Jeedom zu stoppen</simpara>
</section>
<section id="_jeedom_reboot">
<title>jeedom::reboot</title>
<simpara>Ermöglicht Jeedom neu zu starten</simpara>
</section>
</section>
<section id="_json_api_plugin_2">
<title>JSON API Plugin</title>
<section id="_plugin_install">
<title>plugin::install</title>
<simpara>Installation/Update eines speziellen Plugin</simpara>
<simpara>Parameter :</simpara>
<itemizedlist>
<listitem>
<simpara>
string plugin_id : nom du plugin (logischer Namen)
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_plugin_remove">
<title>plugin::remove</title>
<simpara>Löschen eines speziellen Plugin</simpara>
<simpara>Parameter :</simpara>
<itemizedlist>
<listitem>
<simpara>
string plugin_id : nom du plugin (logischer Namen)
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_json_api_update">
<title>JSON API Update</title>
<section id="_update_all">
<title>update::all</title>
<simpara>Gibt eine Liste aller installierten Komponenten, deren Versionen und die zugehörigen Informationen zurück</simpara>
</section>
<section id="_update_checkupdate">
<title>update::checkUpdate</title>
<simpara>Permet de vérifier les mises à jour</simpara>
</section>
<section id="_update_update">
<title>update::update</title>
<simpara>Erlaubt, Jeedom und aller Plugins zu aktualisieren</simpara>
</section>
</section>
<section id="_json_api_beispiele">
<title>JSON API Beispiele</title>
<simpara>Voici un exemple d&#8217;utilisation de l&#8217;API. Pour l&#8217;exemple ci-dessous j&#8217;utilise <ulink url="https://github.com/jeedom/core/blob/stable/core/class/jsonrpcClient.class.php">cette class php</ulink> qui permet de simplifier l&#8217;utilisation de l&#8217;api.</simpara>
<simpara>Die Liste der Objekte abrufen :</simpara>
<programlisting language="php" linenumbering="unnumbered">$jsonrpc = new jsonrpcClient('#URL_JEEDOM#/core/api/jeeApi.php', #API_KEY#);
if($jsonrpc-&gt;sendRequest('object::all', array())){
    print_r($jsonrpc-&gt;getResult());
}else{
    echo $jsonrpc-&gt;getError();
}</programlisting>
<simpara>Einen Befehl ausführen (mit der Option von Titel und Nachricht)</simpara>
<programlisting language="php" linenumbering="unnumbered">$jsonrpc = new jsonrpcClient('#URL_JEEDOM#/core/api/jeeApi.php', #API_KEY#);
if($jsonrpc-&gt;sendRequest('cmd::execCmd', array('id' =&gt; #cmd_id#, 'options' =&gt; array('title' =&gt; 'Coucou', 'message' =&gt; 'Ca marche')))){
    echo 'OK';
}else{
    echo $jsonrpc-&gt;getError();
}</programlisting>
<simpara>L&#8217;API est bien sur utilisable avec d&#8217;autres langages (simplement un post sur une page) </simpara>
</section>
</article>
