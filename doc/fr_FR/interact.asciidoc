:Author:    Skyline-ch
:Email:     <skyline-ch@play-4-fun.net>
:Date:      15.12.2015
:Revision:  2.0.0

Dès Jeedom V2

= Interactions - Principe

Le système d'interaction dans Jeedom permet de réaliser des actions à partir de phrase texte.

Ses phrases peuvent être obtenu par la rédaction manuel comme SMS, requête http ou autre, ainsi que par la conversion de commande vocal en texte grâce à des applications comme Siri, Google Now, SARHA....

La page d’interaction permet de configurer toutes les interactions orales (via le module SARAH, ou tasker (+ autovoice), voir https://jeedom.fr/doc/documentation/howto/fr_FR/doc-howto-android.autovoice.html[ici]) ou écrites ( les sms ou le plugin Slack par exemple…) que l’on peut trouver sur le Market Jeedom.


Pour simplifier la création des phrases il est possible d'utiliser des mots clef ou/et mettre des variation possible dans une même phrase afin que jeedom génère automatiquement une liste de phrases avec toutes les possibilités de combinaison et commande autorisée pour l'interaction.

On obtient donc avec une seul configuration, une ou plusieurs 10ène de phrases possible pour divers commandes.

L'intérêt des interactions réside dans l'intégration simplifié dans d'autre système comme smartphone, tablette, autre box domotique, ect...

Avec une seul requête SMS, http ou autre (voir doc sur API) ont peux donc contrôler tout Jeedom, ce qui permet une grande souplesse et d'éviter les bug en cas de modification de la configuration de vos équipements comme se serais le cas avec un accès direct via l'url de chaque commande.

== Premier pas

=== Page accueil des interactions

Pour accéder à la page d'interaction il faut aller sur Outils -> interactions: 

image::../images/interact001.png[]

Liste des interactions et action général :

image::../images/interact002.png[]

[TIP]
Comme à beaucoup d'endroits sur Jeedom, mettre la souris tout à gauche permet de faire apparaître un menu d'accès rapide (vous pouvez à partir de votre profil le laisser toujours visible).

* En haut de page, on trouve 3 boutons :
** *1* Le bouton "Ajouter" qui permet de créer de nouvelle interaction
** *2* Le bouton "Régénérer" qui vas recréer toutes les interactions (peut être très long > 5min)
** *3* Le bouton "Tester" qui permet d'ouvrir un boite de dialogue pour écrire et tester une phrase

[TIP]
Si vous avez une interaction qui génère les phrase pour les lumières par exemple, et que vous ajoutez un nouveau module de commande de lumière, il vous faudra soit régénérer toutes les interactions soit aller dans l'interaction en question et la re-sauver pour créer les phrase de ce nouveau module.


=== Créer-Modifier une interaction

Le principe de création est assez simple, on va définir une phrase modèle génératrice qui va permettre à Jeedom de créer une ou plusieurs centaines d’autres phrases qui seront des combinaisons possibles du modèle.

Ont vas définir de la même façon des réponses avec un modèle (ça permet à Jeedom d’avoir plusieurs réponses pour une seule et même question).

Ont peu aussi définir une commande à exécuter si par exemple l'interaction n'est pas liée à une action mais une information ou si on souhaite réaliser une action particulière après celle-ci (il est aussi possible d'exécuter un scénario, de contrôler plusieurs commandes...).

==== Interphase de configuration

Une fois une interaction ajouté ou un clique sur une interaction existante pour la modifier vous arriver sur la page de configuration de l'interaction :

image::../images/interact003.png[]

Ici vous Trouvez 2 zones avec plusieurs élément en leur sien : 

* *Général*
** *Nom* : nom de l'interaction (peut être vide, le nom remplace le texte de la demande dans la liste des interactions)
** *Groupe* : groupe de l'interaction, cela permet de les organiser (peut être vide, sera donc dans le groupe "aucun")
** *Demande* : la phrase modèle génératrice (obligatoire)
** *Synonyme* : permet de définir des synonymes sur les noms des commandes
** *Réponse* : la réponse à fournir
** *Conversion binaire* : permet de convertir les valeurs binaire en ouvert/fermé par exemple (uniquement pour les commandes de type info binaire)
** *Utilisateur autorisés* : limite l'interaction à certain utilisateur (les logins séparé par des |)
* *Filtres (limite le champ d'application pour le modèle aux éléments sélectionner)*
** *Limiter aux commandes de type* : permet de n'utiliser que les type actions, infos ou les 2 type 
** *Limiter aux commandes ayant pour sous-type* : permet de limiter la génération à un ou plusieurs sous-type
** *Limiter aux commandes ayant pour unité* : permet de limiter la génération à une ou plusieurs d'unité (Jeedom crée la liste automatiquement à partir des unités définie dans vos commandes)
** *Limiter aux commandes appartenant à l'objet* : permet de limiter la génération à un ou plusieurs objet (Jeedom crée la liste automatiquement à partir des objets que vous avez créé)
** *Limiter au plugin* : permet de limiter la génération à un ou plusieurs plugin (Jeedom crée la liste automatiquement à partir des plugins installer)
** *Limiter à la catégorie* : permet de limiter la génération à une ou plusieurs catégorie
** *Limiter à l'équipement* : permet de limiter la génération à un seul équipement/module (Jeedom crée la liste automatiquement à partir des équipement/module que vous avez)
* *Action* : à utiliser si vous voulez cibler une ou plusieurs commande(s) spécifique(s) ou passer des paramètres particulier
* *Phrases générées*
** *Phrases générées* : Bouton qui permet de voir les phrases générer par la phrase modèle génératrice (Vous devez sauver l'interaction pour générer ou régénérer les phrases)
** *Nombre de phrases générées* : nombre de phrases générées

==== Interaction simple

La façon la plus simple de configurer une interaction c'est de lui donner un modèle générateur rigide sans variation possible, cette méthode ciblera très précisément une commande, ou scénario

Dans l'exemple qui suit ont peux voir dans demande la phrase exacte à fournir pour déclencher l'interaction, ici pour allumer le plafonnier du salon

image::../images/interact004.png[]

Ont peux voir sur cette capture la configuration pour avoir une interaction liée à une action spécifique, cette action est définie dans la partie "Action" de la page.

Ont peux très bien imaginer faire de même avec plusieurs action pour allumer plusieurs lampe dans le salon comme l'exemple qui suit :

image::../images/interact005.png[]

Dans les 2 exemples si dessus, la phrase modèle est identique mais les actions qui en découle change en fonction de ce qui est configurer dans la partie "Action", ont peux donc déjà avec une interaction simple à phrase unique imaginer des actions combinée entre divers commande et scénario (ont peux aussi déclencher des scénarios dans la partie action des interactions)

[TIP]
Pour ajouter un scénario, créer une nouvelle action, écrire "scenario" sans accent appuyer sur la touche tabulation de votre clavier pour faire apparaitre le sélecteur de scénario


==== Interaction multiple commande

Nous allons ici voir tout l'intérêt et puissance des interactions, avec une phrase modèle nous allons pouvoir générer des phrases pour tout un groupe de commande.

Ont vas reprendre ce qui a été fait plus haut, supprimer les actions que l'on avait ajouté et à la place de la phrase fixe dans demande, nous allons utiliser les tags *\#commande#* et *\#equipement#*, Jeedom vas donc remplacer ses tags par le nom des commandes et nom de l'équipement (ont peux voir l'importance d'avoir des noms de commande/équipement cohérant)

image::../images/interact006.png[]

Ont peux donc constater ici que Jeedom à générer 152 phrases à partir de notre modèle, tout fois elle ne sont pas très bien construite et l'on a un peu de tout.

Pour faire de l'ordre dans tout cela ont vas utiliser les filtres (partie de droit de notre page de configuration).
Dans cette exemple ont veux générer des phrases pour allumer des lumières, ont peux donc décocher le type de commande info (si je sauve il ne me reste plus que 95 phrase générer), puis dans les sous-types, ont peux ne garder cocher que défaut qui correspond au bouton d'action (reste donc plus que 16 phrases).

image::../images/interact007.png[]

c'est mieux mais ont peux faire encore plus naturel, si je prends l'exemple générer "On entrée", il serais bien de pouvoir transformer cette phrase en "allume l'entrée" ou en "allumer l'entrée".
Pour faire cela Jeedom dispose sous le champ demande, un champ Synonyme qui vas nous permettre de nommer différemment le nom des commandes dans nos phrases générer, ici c'est "on", j'ai même des "on2" dans les modules qui peuvent contrôler 2 sorties.

Ont vas donc dans les synonymes indiquer le nom de la commande et le(s) synonyme(s) à utiliser : 

image::../images/interact008.png[]

Ont peux voir ici une syntaxe un peux nouvelle pour les synonymes, un nom de commande peux avoir plusieurs synonyme, ici "on" a comme synonyme "allume" et "allumer", la syntaxe c'est donc "#nom de la commande#" *#=#* "#synonyme 1#"*#,#* "#synonyme 2#" (ont peux mettre autant de synonyme que l'on veut), puis pour ajouter des synonymes pour un autre nom de commande il suffit d'ajouter après le denier synonyme une barre verticale "#|#" suite de laquelle vous pouvez à nouveau nommer la commande qui vas avoir des synonymes comme pour la première partie.

Bien c'est déjà mieux mais il manque encore pour la commande "on" "entrée" le "l' " et pour d'autre le "la" ou "le" ou "un" ect...
Ont pourrais modifier le nom de l'équipement pour l'ajouter, ce serais une solution, si non ont peux utiliser les variations dans la demande, cela consiste à lister une série de mot possible à un emplacement de la phrase, Jeedom va donc générer des phrases avec ses variations.

image::../images/interact009.png[]

Comme vous pouvez le voir dans la liste à gauche ont as maintenant des phrases un peux plus correcte avec des phrases qui ne sont pas juste, pour notre exemple "on" "entrée", on trouve donc "Allume entrée", "Allume un entrée", "Allume une entrée", "Allume l'entrée" ect... ont as donc toute les variantes possible avec ce que l'on a ajouté entre les "[ ]" et se si pour chaque synonyme, ce qui génère rapidement beaucoup de phrase (ici 130).

Il devient donc importent de bien construire ses phrases modèle et synonyme ainsi que de sélectionner les bon filtres pour ne pas générer trop de phrase inutile.
Personnellement je trouve intéressent d'avoir quelques incohérence du style "un entrée" car si chez vous vous avez une personne étrangère qui ne parle pas correctement le Français les interactions fonctionnerons tout de même.

==== Interaction fonction Avancé



== Exemples

=== Y a-t-il quelqu'un dans la chambre ?

* La question est donc "y’a-t-il quelqu’un dans la chambre"
* La réponse sera "oui il y a quelqu’un dans la chambre" ou "non il n’y a personne dans la chambre"
* La commande qui répond à ça est "\#[Chambre][Multi-Sensor][Présence]#"

image::../images/interact2.JPG[]

Ici on peut voir la case la question, ensuite en dessous on voit la conversion du binaire en phrase (sinon Jeedom répondrait "1" ou "0"), puis dans la case en haut à droite la réponse avec "\#valeur#" étant remplacée lors de la réponse. Ensuite on voit la commande à exécuter pour avoir la réponse à la question. Enfin tout à droite on voit bien qu’il y a une seule phrase de générée. 

=== Connaitre la température/huminité/luminosité

Plus compliqué maintenant, on voit bien que là pour chaque commande il faut tout écrire, c’est pas très pratique on va donc utiliser le système de génération. Ici un exemple générique qui sert à connaître la température, l’humidité, la luminosité des différentes pièces (objet au sens Jeedom).

* Une phrase générique type "Quelle est la température du salon" ou "Quelle est la luminosité de la chambre" qui peut être convertie en  : "quelle est [la |l\']\#commande# [du |de la |de l'| sur le |dans le | dans la ]#objet#" (l’utilisation de [mot1 | mot2] permet de générer toutes les variantes possibles de la phrase avec mot1 ou mot2). Lors de la génération Jeedom va générer toutes les combinaisons possibles de phrase avec toutes les commandes existantes en remplaçant \#commande# par le nom de la commande et \#objet# par le nom de l’objet.
* La réponse sera de type "21 °C" ou "200 lux" il suffit de mettre : \#valeur# \#unite#

image::../images/interact3.JPG[]

Il suffit donc de remplir les champs comme ci-dessus.

=== Combien fait-il dans le salon

Dernier exemple l’utilisation de filtre. "Quelle est la température du salon" est sympa mais des fois je préfère demander "Combien fait-il dans le salon" et j’aimerais aussi une réponse moins formelle. Seul problème dans la phrase "Combien fait-il dans le salon" je n’ai pas le nom de la commande.

* La question "Combien fait-il dans le salon" qui pourrait être en version générique "\#commande# [dans la |dans le| | sur le ] \#objet#"" mais en remplaçant "température" par "combien fait-il" ou "il fait combien". Pour ça rien de plus simple il suffit d’utiliser le champs synonyme en mettant "température=combien fait-il,il fait combien|balcon=balcon,dehors" (j’en profite aussi pour remplacer balcon soit par balcon ou par dehors, ça me permettra d’avoir "combien fait-il dehors" par exemple)
* Pour la réponse j’aimerais un truc du genre "Il fait 20 °C" ou "La température est de 20 °C" ou même "20°C", il faut donc mettre : "[il fait |la température est de | ]\#valeur# \#unite#" (vous remarquerez que dans la liste de choix pour le début de la réponse on a "il fait", "la température est de" et " " soit vide)
* Enfin dernier problème je veux que cette commande ne soit valable que pour la température, je vais donc utiliser un filtre, le plus simple ici étant de filtrer sur l’unité soit "°C"

image::../images/interact5.JPG[]

On a donc au dessus le résultat avec un filtre sur les commandes ayant pour unité °C.

=== Réponse composé de plusieurs commandes

Il est aussi possible de mettre plusieurs commande dans une réponse :

image::../images/interact10.JPG[]

On voit ici que j'ai mit 2 commandes dans la réponse sans rien préciser dans les actions, il n'y a donc qu'une seule phrase de générée (il faudra donc bien poser celle la) mais dans la reponse j'ai 2 informations le CO2 et la température.

=== Piloter un dimmer ou un thermostat (slider)

Il est possible de piloter une lampe en pourcentage ou un themrostat avec les interactions. Voici un exemple pour piloter son thermostat au travers des intérations : 

image::../images/interact19.JPG[]

Comme on le voit il y ici dans la demande le tag #consigne# (on peut mettre ce que l'on veut) qui est repris dans la commande du thermostat pour passer la valeur voulu

[NOTE]
On peut utiliser n'importe quel tag, il peut en avoir plusieurs pour piloter par exemple plusieurs commandes. A noter aussi que tous les tags sont passé aux scénario que l'interaction lance (il faut toute fois que le scénario soit en "Exécuter en avant plan")

=== Piloter la couleur d'un bandeau de LED

Il est possible de piloté une commande couleur par les interactions en demandant par exemple à Jeedom d'allumer un bandeau de led en bleu. Voila l'interaction à faire : 

image::../images/interact18.JPG[]

Ici rien de bien compliqué, il faut en revanche avoir configuré les couleurs dans Jeedom, cela se passe sur la page Administration -> Configuration  puis dans la partie "Gestion des intéractions" : 

image::../images/interact14.JPG[]

Dans le tableau vous pouvez ajouter des nom de couleur et la correspondance de la couleur pour Jeedom.

Avec ceci si vous dite "Allume la chambre en vert", Jeedom va rechercher dans la demande une couleur et l'appliquer à la commande

=== Utilisation couplé a un scénario

Il est possible de coupler un scénario à une interaction et de générer la réponse avec le scénario (cela permet de changer la réponse en fonction de différent paramètres). Voici un exemple d'intéraction : 

image::../images/interact15.JPG[]

La rien de compliqué l'interaction lance le scénario.

Voila le details du scénario : 

image::../images/interact16.JPG[]

Ici assez simple aussi un scénario tout simple avec aucun déclencheur et un simple test sur la témpérature, et une action de type return qui indique la phrase de reponse à l'interaction (seule un déclenchement sur interaction utilise l'action return sinon elle ne sert à rien)

[IMPORTANT]
Il faut absokument que le scénario soit en "Exécuter en avant plan"

Et voila le retour (a travers Slack) : 

image::../images/interact17.JPG[]

[TIP]
Il est possible de recuperer dans le scénario la demande qui a déclenché celui-ci à l'aide du tag \#query#

=== Utilisation couplé a un scénario avec passage de tags

Lors de l'utilisation de tags dans la demande ceux-ci sont automatiquement passé aux scénario.

[IMPORTANT]
Il faut absokument que le scénario soit en "Exécuter en avant plan". Voila un exemple : 

image::../images/interact21.JPG[]

Et la scénario qui va avec : 

image::../images/interact22.JPG[]

=== Programmation d'une action avec les intéractions

Les intéractions permettent de faire beaucoup de chose ne particulier vous pouvez programmer dynamiquement une action. Exemple : "Met le chauffage à 22 pour 14h50". Pour cela rien de plus il suffit d'utiliser les tags \#time# (si on défini une heure précise) ou  \#duration# (pour dans X temps, exemple dans 1 heure) : 

image::../images/interact23.JPG[]

[NOTE]
Vous remarquerez dans la réponse le tag \#value# celui-ci contient dans le cas d'une intéraction programmé l'heure de programmation effective

Voila le résultat : 

image::../images/interact24.JPG[]

== Tester

Le bouton tester vous permet d'executer une interaction : 

image::../images/interact11.JPG[]

Vous avez juste à mettre la demande en haut et Jeedom vous expliquera la réponse : 

image::../images/interact13.JPG[]

Ici en mode execution ou l'on ne voit que la réponse

== Configuration

La configuration est accessible à partir de Administration -> Configuration puis la partie "Gestion des intéractions" :

image::../images/interact14.JPG[]

Vous avez ici 3 parametres : 

* *Sensibilité (par défaut 10)* : niveau de correspondance minimum entre la phrase recu et les phrases générées de 1 à 99
* *Ne pas répondre si l'interaction n'est pas comprise* : par defaut Jeedom répond "je n'ai pas compris" si l'intéraction n'est pas comprise, il est possible de desactiver ce fonctionement pour que jeedom ne réponde rien
* *Regex général d'exclusion pour les interactions* : permet de definir une regexp qui si elle correspond à une interaction supprimera automatiquement cette phrase de la génération (reservé aux experts)

Et vous retrouvez la partie conversion de couleur (nom de la couleur vers sa valeur réel)

[TIP]
Si vous activez les logs au niveau debug vous avez un log interact qui vous donne la niveau de sensibilité pour chaque comparaison de phrase, cela peut permettre de regler celui-ci plus facilement

== Résumé

Demande::
Vous pouvez utiliser "\#commande#" et "\#objet#" (les 2 doivent absolument être utilisés ensemble) pour générer une liste de commandes (il est possible de filtrer la génération pour réduire la liste). Il est aussi possible d'utiliser "\#equipement#" (utile si plusieurs commandes appartenant au même objet ont le même nom)
Exemple : Quelle est la "\#commande# [du |de la |de l']\#objet#"
Lors de la génération des commandes vous pouvez utiliser le champ synonyme (syn1=syn2,syn3|syn4=syn5) pour remplacer le nom des objets, des équipements et/ou des commandes

Réponse::
Vous pouvez utiliser "\#valeur#" et "\#unite#" dans le retour (ils seront remplacés par la valeur et l'unité de la commande). Vous avez aussi accès a tous les tag des scénario et à : 
"\#profile#" => Nom de la personne ayant lancé l'éxecution (peut ne pas etre disponible)
Exemple : "\#valeur# \#unite#"
Vous pouvez utiliser le champ conversion binaire pour convertir les valeurs binaires (0 et 1) : 
Exemple : non|oui

Personne::
Le champ personne permet de n'autoriser que certaines personnes à exécuter la commande, vous pouvez mettre plusieurs profils en les séparant par |.
Exemple : personne1|personne2

